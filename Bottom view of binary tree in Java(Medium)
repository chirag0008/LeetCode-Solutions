class Pair{
    Node node;
    int hd;
    Pair(Node _node,int _hd){
        node=_node;
        hd=_hd;
    }
}
class Solution
{
    //Function to return a list containing the bottom view of the given tree.
    public ArrayList <Integer> bottomView(Node root)
    {
        // Code here
        ArrayList<Integer>ans=new ArrayList<>();
        if(root==null){
            return ans;
        }
        Map<Integer,Integer>map=new TreeMap<>();
        Queue<Pair>q=new LinkedList<>();
        q.add(new Pair(root,0));
        while(!q.isEmpty()){
            Pair it=q.remove();
            int hd=it.hd;
            Node temp=it.node;
            map.put(hd,temp.data);
            if(temp.left!=null){
                q.add(new Pair(temp.left,hd-1));
            }
            if(temp.right!=null){
                q.add(new Pair(temp.right,hd+1));
            }
        }
        for(Map.Entry<Integer,Integer>entry:map.entrySet()){
            ans.add(entry.getValue());
        }
        return ans;
    }
}
